This is GROMOS++
================

necessary compilation tools
***************************

	ANSI C++ compatible compiler
	(g++ >= 3.0; tested for gcc version up to 4.1.2)
	(Intel C++ Compiler; tested with version 8.1)

Required libraries
******************

	GNU Scientific Library GSL (required)
	-----------------------------------------------------------

	http://www.gnu.org/software/gsl/
	compilation has been checked with version 
	1.1, 1.2, 1.3, 1.4, 1.5 and 1.8

	if the GSL is installed to the default location ./configure
	will usually be able to find it.
	Otherwise set the compilation flags accordingly:

	--with-gsl=/path/to/gsl


installing from a tarball
*************************

	1. tar zxvf gromos++-x.y.z.tar.gz
	2. cd gromos++-x.y.z
	3. ./configure
	4. make
	5. make check
	6. make install

	See ./configure --help for options.
	step 5 and 6 are optional.

To compile and install the unconfigured source tree from cvs
************************************************************

	prerequisites:
		GNU autotools:
		    autoconf (GNU Autoconf) 2.58
		    libtoolize (GNU libtool) 1.5
		    automake (GNU automake) 1.7.9

	1. mkdir -p config
	2. aclocal
	3. libtoolize --copy
	4. autoconf
	5. autoheader
	6. automake --add-missing --copy
	7. ./configure
	8. make
	9. make check
       10. make install

	See ./configure --help for options.

	for convenience, the first five steps are in the Config.sh
	script, so you only have to type:

	1. ./Config.sh
	2. mkdir ARCHITECTURE
	3. cd ARCHITECTURE
	4. ../configure
	5. make
	6. make check
	7. make install

installing the documentation
****************************
        1. make doc
        2. doxygen doc/gromos++.doxy

optional libraries
******************

	GromosXX MD library (optional)
	------------------------------------------------------------

	IGC: group for computational chemistry
	W. F. van Gunsteren
	Swiss Federal Institute of Technology

	--with-gromosxx=/path/to/gromosXX


ARCHITECTURE DEPENDENT DETAILS
******************************

MacOS X (tested on V 10.3.3 Panther):
------------------------------------

Panther ships with the so-called developertools (http://www.apple.com/macosx/developertools/),
which include a port of the gcc 3.3. The developertools might not be installed by
default though, so you should make sure that this is the case
(e.g. type: 'which gcc'; if you dont get an answer it is not installed).

Unfortunately, the MacOS version of the libtoolize program (and others) does
sometimes not work with things you download from GNU and try to
compile. Therefore, do this:

1. Download the GNU autoconf, automake and libtool packages
   and install them. By default they will be put under /usr/local
   which is just fine.
(As an alternative you might just want to install the binary
 packages from FINK (http://fink.sourceforge.net/), 
 i.e. the port of the Debian APT package tools.
 You will need to have FINK installed, though).
2. Set the path to point to /usr/local/bin so that those versions
   of automake/autoconf/libtool will be used.
3. Build the distribution as written above.
4. In case of linking errors when using the gcc port from Apple
   build the distribution without support for shared libraries
  (./configure --enable-shared=NO)
   If you really need shared library support, it is possible to
   first compile and install the regular GCC from the GNU tarball
   and use that one to compile gromos++. This has been tested and
   works.

MacOS X (V. 10.4.10 Darwin) with gcc 4.0
----------------------------------------
Similar as above.

Shared libraries can also be compiled by setting CC=g++ before the
autoconf/automake/configure commands. (CC is used for linking).

